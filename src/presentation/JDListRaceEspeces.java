/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import dao.daoAnimal;
import dao.daoRace;
import dao.daoType;
import factory.Factory;
import javax.swing.JOptionPane;
import objet.Race;
import model.ListModelRace;
import model.ListModelType;

/**
 *
 * @author Super-Afg
 */
public class JDListRaceEspeces extends javax.swing.JDialog {

    /**
     * Creates new form JDListRaceEspeces
     */
    public JDListRaceEspeces(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        jListeRaces.setModel(myListeRace);

        jListEspeces.setModel(myListeType);

        refreshModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEspeces = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListeRaces = new javax.swing.JList();
        jLabel2 = new javax.swing.JLabel();
        btnSuR = new javax.swing.JButton();
        btnMoR = new javax.swing.JButton();
        btnAjR = new javax.swing.JButton();
        btnSuE = new javax.swing.JButton();
        btnModE = new javax.swing.JButton();
        btnAjE = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jButton7.setText("jButton7");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Liste des espéces et races");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Espèces :");

        jListEspeces.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jListEspeces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListEspecesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListEspeces);

        jListeRaces.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jListeRaces.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListeRacesMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jListeRaces);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Races :");

        btnSuR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/corbeille.png"))); // NOI18N
        btnSuR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuRActionPerformed(evt);
            }
        });

        btnMoR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/modifier-icone-5132-48.png"))); // NOI18N
        btnMoR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoRActionPerformed(evt);
            }
        });

        btnAjR.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ajouter-vert-plus-icone-9105-48.png"))); // NOI18N
        btnAjR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjRActionPerformed(evt);
            }
        });

        btnSuE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/corbeille.png"))); // NOI18N
        btnSuE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuEActionPerformed(evt);
            }
        });

        btnModE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/modifier-icone-5132-48.png"))); // NOI18N
        btnModE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModEActionPerformed(evt);
            }
        });

        btnAjE.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ajouter-vert-plus-icone-9105-48.png"))); // NOI18N
        btnAjE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjEActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/arreter.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(btnAjE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnModE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSuE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAjR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnMoR)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSuR))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSuE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnModE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAjE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnSuR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnMoR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAjR)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAjRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjRActionPerformed
        String nouvrace = JOptionPane.showInputDialog(null, "Entrez un nouveau animal", "Insertion", JOptionPane.PLAIN_MESSAGE);

        if (nouvrace != null) {
            boolean ok = daorace.insertRace(new Race(nouvrace, ligne));

            if (!ok) {
                JOptionPane.showMessageDialog(null, "Ajout impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Opération annulée !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }

        refreshModel();
    }//GEN-LAST:event_btnAjRActionPerformed

    private void btnAjEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjEActionPerformed
        String objtype = JOptionPane.showInputDialog(null, "Entrez une nouvelle animal", "Insertion", JOptionPane.PLAIN_MESSAGE);

        if (objtype != null) {
            boolean ok = daotype.insertType(objtype);

            if (!ok) {
                JOptionPane.showMessageDialog(null, "Ajout impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Opération annulée !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        }

        refreshModel();
    }//GEN-LAST:event_btnAjEActionPerformed

    private void btnModEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModEActionPerformed
        objet.Type objnat;

        if (jListEspeces.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord un type animeau svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            String nouvnat = JOptionPane.showInputDialog(null, "Entrez le nouveau type d'animeau", (String) jListEspeces.getSelectedValue());
            if (nouvnat != null) {
                objnat = myListeType.getMyList(jListEspeces.getSelectedIndex());
                objnat.setNom_t(nouvnat);

                boolean ok = daotype.updateType(objnat);
                if (!ok) {
                    JOptionPane.showMessageDialog(null, "Modification impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Opération annulée !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            }

            refreshModel();
        }
    }//GEN-LAST:event_btnModEActionPerformed

    private void btnSuEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuEActionPerformed
        objet.Type objnat;

        if (jListEspeces.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord une nation svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            int rep = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer "
                    + (String) jListEspeces.getSelectedValue() + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION) {
                objnat = myListeType.getMyList(jListEspeces.getSelectedIndex());
                boolean ok = daotype.deleteType(objnat);
                System.err.println(objnat);
                if (!ok) {
                    JOptionPane.showMessageDialog(null, "Suppression impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
                }
            }

            refreshModel();
        }
    }//GEN-LAST:event_btnSuEActionPerformed
    private void refreshModel() {
        try {
            objet.Type type;
            type = myListeType.getMyList(jListEspeces.getSelectedIndex());
            ligne = type.getId_t();

            myListeRace.setMyList(daorace.selectRaceparType(ligne));
            myListeType.setMyList(daotype.selectTypes());
        } catch (java.lang.IndexOutOfBoundsException e) {
        }

    }
    private void btnMoRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoRActionPerformed
        objet.Race objnat;

        if (jListeRaces.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord un type animeau svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            String nouvnat = JOptionPane.showInputDialog(null, "Entrez le nouveau type d'animeau", (String) jListeRaces.getSelectedValue());
            if (nouvnat != null) {
                objnat = myListeRace.getMyList(jListeRaces.getSelectedIndex());
                System.err.println(objnat);
                objnat.setLib_r(nouvnat);

                boolean ok = daorace.updateRace(objnat);
                if (!ok) {
                    JOptionPane.showMessageDialog(null, "Modification impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Opération annulée !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            }

            refreshModel();
        }
    }//GEN-LAST:event_btnMoRActionPerformed

    private void btnSuRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuRActionPerformed
        objet.Race objnat;

        if (jListeRaces.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(null, "Sélectionnez d'abord une nation svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            int rep = JOptionPane.showConfirmDialog(null, "Voulez-vous vraiment supprimer "
                    + (String) jListEspeces.getSelectedValue() + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION) {
                objnat = myListeRace.getMyList(jListeRaces.getSelectedIndex());

                boolean ok = daorace.deleteRace(objnat);

                if (!ok) {
                    JOptionPane.showMessageDialog(null, "Suppression impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
                }
            }

            refreshModel();
        }
    }//GEN-LAST:event_btnSuRActionPerformed

    private void jListEspecesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListEspecesMouseClicked
        refreshModel();
    }//GEN-LAST:event_jListEspecesMouseClicked

    private void jListeRacesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListeRacesMouseClicked
        refreshModel();
    }//GEN-LAST:event_jListeRacesMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton8ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAjE;
    private javax.swing.JButton btnAjR;
    private javax.swing.JButton btnMoR;
    private javax.swing.JButton btnModE;
    private javax.swing.JButton btnSuE;
    private javax.swing.JButton btnSuR;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jListEspeces;
    private javax.swing.JList jListeRaces;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

    private int ligne = 1;
    private daoAnimal daoani = Factory.getdaoAnimal();
    private daoRace daorace = Factory.getdaoRace();
    private daoType daotype = Factory.getdaoType();
    private ListModelRace myListeRace = new ListModelRace(daorace.selectRaceparType(ligne));
    private ListModelRace myListeR = new ListModelRace(daorace.selectRaces());
    private ListModelType myListeType = new ListModelType(daotype.selectTypes());
}

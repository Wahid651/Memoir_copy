package presentation;

import com.itextpdf.text.Anchor;
import com.itextpdf.text.Chapter;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Section;
import com.itextpdf.text.pdf.PdfCopyFields;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfWriter;
import dao.Connexion;
import dao.daoAdoption;
import dao.daoAnimal;
import dao.daoLieu;
import dao.daoRace;
import dao.daoType;
import factory.Factory;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyVetoException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import model.TableModelAnimal;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import objet.Adoption;
import objet.Animal;
import objet.Lieu;

/*
 * JFPrincipale.java
 *
 * Created on 2 avril 2009, 10:28
 */
/**
 *
 * @author sonneville
 */
public class JFPrincipale extends javax.swing.JFrame {

    /**
     * Creates new form JFPrincipale
     */
    public JFPrincipale() {
       
        initComponents();
        createThemes();
        fillComponents();
        refreshModel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always //
     * * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPopupMenu = new javax.swing.JPopupMenu();
        jMenuItemaddAnimal = new javax.swing.JMenuItem();
        jMenuItemAdopter = new javax.swing.JMenuItem();
        jMenuBar3 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar4 = new javax.swing.JMenuBar();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        cbLocalisation = new javax.swing.JComboBox();
        cbRace = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        tfIdPuce = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbSexeFiltre = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        cbTangeAge = new javax.swing.JComboBox();
        labNBanimal = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        btnQuiter = new javax.swing.JButton();
        btnDeleteAnimal = new javax.swing.JButton();
        btnModifAnimal = new javax.swing.JButton();
        btnInsertAnimal = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListAnimal = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFichier = new javax.swing.JMenu();
        jMenuItemQuitter = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuOutile = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuSecurite = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenueTheme = new javax.swing.JMenu();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar2.add(jMenu2);

        jMenuItemaddAnimal.setText("jMenuItem7");
        jPopupMenu.add(jMenuItemaddAnimal);

        jMenuItemAdopter.setText("adopter l'animal");
        jPopupMenu.add(jMenuItemAdopter);

        jMenu3.setText("File");
        jMenuBar3.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar3.add(jMenu4);

        jMenu5.setText("File");
        jMenuBar4.add(jMenu5);

        jMenu6.setText("Edit");
        jMenuBar4.add(jMenu6);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de refuge pour animaux");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/personne.png"))); // NOI18N
        jButton2.setText("Liste des propiétaires");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/messagebox-alerte-icone-9358-32.png"))); // NOI18N
        jButton1.setText("Gérer les santés");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/homme-dossier-par-utilisateur-icone-7100-32.png"))); // NOI18N
        jButton3.setText("Carnet des vétérinaire");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        cbLocalisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbLocalisationActionPerformed(evt);
            }
        });

        cbRace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbRaceActionPerformed(evt);
            }
        });

        jLabel3.setText("Espèce :");

        jLabel1.setText("Localisation :");

        tfIdPuce.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIdPuceActionPerformed(evt);
            }
        });

        jLabel2.setText("Identifiant :");

        jLabel4.setText("Sexe :");

        cbSexeFiltre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<tous>", "Femelle", "Male" }));
        cbSexeFiltre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSexeFiltreActionPerformed(evt);
            }
        });

        jLabel5.setText("Âge :");

        cbTangeAge.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<tous>", "<  0  à 1 an >", "< 2  à 4 ans >", "< 4  à 8 ans >", "<   plus de 8 ans  >" }));
        cbTangeAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbTangeAgeActionPerformed(evt);
            }
        });

        labNBanimal.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(tfIdPuce, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbLocalisation, 0, 150, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbRace, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbSexeFiltre, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbTangeAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(317, 317, 317)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(labNBanimal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cbLocalisation, cbRace, cbSexeFiltre, cbTangeAge});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1)
                    .addComponent(jButton3))
                .addGap(61, 61, 61))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfIdPuce, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbLocalisation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(cbRace, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cbSexeFiltre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cbTangeAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(labNBanimal, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbLocalisation, cbRace, cbSexeFiltre, cbTangeAge});

        btnQuiter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/quitter.png"))); // NOI18N
        btnQuiter.setText("Quitter");
        btnQuiter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuiterActionPerformed(evt);
            }
        });

        btnDeleteAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/corbeille.png"))); // NOI18N
        btnDeleteAnimal.setText("Supprimer");
        btnDeleteAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAnimalActionPerformed(evt);
            }
        });

        btnModifAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/modifier-icone-5132-48.png"))); // NOI18N
        btnModifAnimal.setText("Modifier");
        btnModifAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifAnimalActionPerformed(evt);
            }
        });

        btnInsertAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ajouter-vert-plus-icone-9105-48.png"))); // NOI18N
        btnInsertAnimal.setText("Ajouter");
        btnInsertAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertAnimalActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/accord-contrat-entente-main-rencontre-partenaire-icone-8320-32.png"))); // NOI18N
        jButton4.setText("Adopter l'animal");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/lecteur-icone-7037-32.png"))); // NOI18N
        jButton6.setText("Générer un contart d'adoption");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnInsertAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnModifAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDeleteAnimal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQuiter)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton4)
                        .addComponent(jButton6))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnQuiter)
                            .addComponent(btnDeleteAnimal)
                            .addComponent(btnModifAnimal)
                            .addComponent(btnInsertAnimal))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnInsertAnimal, jButton4, jButton6});

        jScrollPane1.setBorder(null);
        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTableListAnimal.setModel(myTableAnimal
        );
        jTableListAnimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListAnimalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListAnimal);

        jMenuFichier.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/fichiers-icone-5308-16.png"))); // NOI18N
        jMenuFichier.setText("Fichier");

        jMenuItemQuitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/halte-session-icone-9844-32.png"))); // NOI18N
        jMenuItemQuitter.setText("Quitter");
        jMenuItemQuitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemQuitterActionPerformed(evt);
            }
        });
        jMenuFichier.add(jMenuItemQuitter);

        jMenuBar1.add(jMenuFichier);

        jMenuEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/vert-une-table-icone-5666-16.png"))); // NOI18N
        jMenuEdit.setText("Liste");

        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/animal-chat-icone-4095-32.png"))); // NOI18N
        jMenuItem1.setText("Espéces & race");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem1);

        jMenuItem2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/vaccin2.png"))); // NOI18N
        jMenuItem2.setText("Vaccins");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem2);

        jMenuItem3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/virus-detecte-2-icone-5391-32.png"))); // NOI18N
        jMenuItem3.setText("Medicaments");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem3);

        jMenuItem4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/virus-detecte-icone-5463-32.png"))); // NOI18N
        jMenuItem4.setText("Pathologies");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItem4);

        jMenuBar1.add(jMenuEdit);

        jMenuOutile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/tableaux-graphiques-tarte-icone-7937-16.png"))); // NOI18N
        jMenuOutile.setText("Rapport");

        jMenuItem5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/tableaux-graphiques-tarte-icone-7937-32.png"))); // NOI18N
        jMenuItem5.setText("L'arrivée de l'animal");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenuOutile.add(jMenuItem5);

        jMenuItem7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/pouvoir-statistiques-icone-8550-32.png"))); // NOI18N
        jMenuItem7.setText("Classement des races des animaux");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenuOutile.add(jMenuItem7);

        jMenuItem8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/animal-chien-icone-3963-32.png"))); // NOI18N
        jMenuItem8.setText("Races de chiens préférées");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenuOutile.add(jMenuItem8);

        jMenuItem9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/chat-icone-5225-32.png"))); // NOI18N
        jMenuItem9.setText("Races de chats préférées");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        jMenuOutile.add(jMenuItem9);

        jMenuItem11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/premiers-secours-sante-icone-9215-32.png"))); // NOI18N
        jMenuItem11.setText("Consulter la liste d'interventions programmées");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        jMenuOutile.add(jMenuItem11);

        jMenuItem12.setText("Calculer l'age réel de l'animal");
        jMenuOutile.add(jMenuItem12);

        jMenuBar1.add(jMenuOutile);

        jMenuSecurite.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/la-protection-bouclier-icone-5206-16.png"))); // NOI18N
        jMenuSecurite.setText("Sécurité");

        jMenuItem6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/3-administrateur-icone-7079-32.png"))); // NOI18N
        jMenuItem6.setText("Ajouter un admin");
        jMenuSecurite.add(jMenuItem6);

        jMenuItem10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/ethernet-network-cable-connection-icone-5103-32.png"))); // NOI18N
        jMenuItem10.setText("Connection a la base de donnée ");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        jMenuSecurite.add(jMenuItem10);

        jMenuBar1.add(jMenuSecurite);

        jMenueTheme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/parametres-impot-icone-9133-16.png"))); // NOI18N
        jMenueTheme.setText("Paramètres ");
        jMenuBar1.add(jMenueTheme);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1011, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 671, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jMenuItemQuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemQuitterActionPerformed
// TODO add your handling code here:
    Factory.getDAOConnexion().close();
    System.exit(0);
}//GEN-LAST:event_jMenuItemQuitterActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        JDListRaceEspeces jd = new JDListRaceEspeces(this, true);
        jd.setVisible(true);

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JDListVaccins jd = new JDListVaccins(this, true);
        jd.setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        JDListMedicament jd = new JDListMedicament(this, true);
        jd.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JDListSoins jd = new JDListSoins(this, true);
        jd.setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JDAffichePersonne jd = new JDAffichePersonne(this, rootPaneCheckingEnabled);
        jd.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTableListAnimalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListAnimalMouseClicked

        //if (evt.getClickCount() == 2) {
        jDesktopPane1.removeAll();
        myAnimal = myTableAnimal.getMyList(jTableListAnimal.getSelectedRow());
        JIFAfficheAnimal f = new JIFAfficheAnimal(myAnimal);

        jDesktopPane1.add(f);
        try {
            f.setMaximum(true);
        } catch (PropertyVetoException ex) {
            Logger.getLogger(JFPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }

        jDesktopPane1.repaint();

        //  }
    }//GEN-LAST:event_jTableListAnimalMouseClicked

    private void btnInsertAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertAnimalActionPerformed
        JDInsertAnimal jd = new JDInsertAnimal(this, rootPaneCheckingEnabled);
        jd.setVisible(true);
        refreshModel();
    }//GEN-LAST:event_btnInsertAnimalActionPerformed

    private void btnQuiterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuiterActionPerformed
        Factory.getDAOConnexion().close();
        System.exit(0);
    }//GEN-LAST:event_btnQuiterActionPerformed

    private void btnModifAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifAnimalActionPerformed
        if (jTableListAnimal.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Séléctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {

            myAnimal = myTableAnimal.getMyList(jTableListAnimal.getSelectedRow());
            JDUpdateAnimal jd = new JDUpdateAnimal(this, rootPaneCheckingEnabled, myAnimal);
            jd.setVisible(true);

            refreshModel();
        }

    }//GEN-LAST:event_btnModifAnimalActionPerformed

    private void btnDeleteAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAnimalActionPerformed
        if (jTableListAnimal.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "Séléctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            myAnimal = myTableAnimal.getMyList(jTableListAnimal.getSelectedRow());
            int rep = JOptionPane.showConfirmDialog(null, "Etes-vous sûr de vouloir supprimer l'élément en cascade ?"
                    + myTableAnimal.getValueAt(jTableListAnimal.getSelectedRow(), 0) + " ?", "Confirmation", JOptionPane.WARNING_MESSAGE);
            if (rep == JOptionPane.YES_OPTION) {
                daoAnimal.deleteAnimal(myAnimal);
            }

        }
        refreshModel();
    }//GEN-LAST:event_btnDeleteAnimalActionPerformed

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked

    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        JDAfficheVeterinaire jd = new JDAfficheVeterinaire(this, rootPaneCheckingEnabled);
        jd.setVisible(true);
        refreshModel();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        //permet de gérer les adoptions voir si la personne n'est pas dans la liste rouge voir si l'animal est dispo !!!!
        if (jTableListAnimal.getSelectedRow() == -1 || myAnimal.getId_a() == 0) {
            JOptionPane.showMessageDialog(null, "Séléctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            boolean ok = false;
            /**
             * @AjouterAdoption @UpdateAnimalVar @return boolean true si tous se
             * deroule bien permet ajouter une adoption
             */
            if (AnimalDispoAdoption(myAnimal) == true && AnimalAuRefuge(myAnimal) == true) {
                if (UpdateAnimalVar(myAnimal) == true) {
                    ok = true;
                } else {
                    if (ok == true && adoptionOK == true) {
                        JOptionPane.showMessageDialog(null, "Opération s'est déroulé avec succès !", "Information", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Une erreur s'est produite lors de l'envoi de la commande, l'adoption a était annulée", "Avertissement", JOptionPane.ERROR_MESSAGE);

                    }
                }
            }
        }

        refreshModel();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        Statistique stat = new Statistique(this, rootPaneCheckingEnabled);
        stat.setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void cbLocalisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbLocalisationActionPerformed
        filtre();
    }//GEN-LAST:event_cbLocalisationActionPerformed

    private void cbRaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbRaceActionPerformed
        filtre();
    }//GEN-LAST:event_cbRaceActionPerformed

    private void tfIdPuceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIdPuceActionPerformed
        refreshModelParIdPuce();
    }//GEN-LAST:event_tfIdPuceActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        if (jTableListAnimal.getSelectedRow() == -1 || myAnimal.getId_a() == 0) {
            JOptionPane.showMessageDialog(null, "Séléctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            if (AnimalDispoAdoption(myAnimal) == true && AnimalAuRefuge(myAnimal) == true) {
                generePdf();
            }
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void cbSexeFiltreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSexeFiltreActionPerformed
        filtre();
    }//GEN-LAST:event_cbSexeFiltreActionPerformed

    private void cbTangeAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbTangeAgeActionPerformed
        filtre();
    }//GEN-LAST:event_cbTangeAgeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JDAfficheSante jd = new JDAfficheSante(this, rootPaneCheckingEnabled);
        jd.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        JasperReport report;
        try {
            report = JasperCompileManager.compileReport(RapportFile+"reportTop10.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, null, daocon.getConnection());
            JasperViewer.viewReport(print, false);
        } catch (JRException ex) {
            Logger.getLogger(JFPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        JasperReport report;
        try {
            report = JasperCompileManager.compileReport(RapportFile+"top10chien.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, null, daocon.getConnection());
            JasperViewer.viewReport(print, false);
        } catch (JRException ex) {
            Logger.getLogger(JFPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        JasperReport report;
        try {
            report = JasperCompileManager.compileReport(RapportFile+"top10chat.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, null, daocon.getConnection());
            JasperViewer.viewReport(print, false);
        } catch (JRException ex) {
            Logger.getLogger(JFPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        JDConnexionMySQL jd = new JDConnexionMySQL();
        jd.setVisible(true);
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
      JasperReport report;
               try {
            report = JasperCompileManager.compileReport(RapportFile+"reportRappel.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, null, daocon.getConnection());
            JasperViewer.viewReport(print, false);
        } catch (JRException ex) {
            Logger.getLogger(JFPrincipale.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    /**
     * Cette méthode est appelée à partir du constructeur pour initialiser et
     * creer des Thémes.
     */
    private void createThemes() {
        //  javax.swing.UIManager.LookAndFeelInfo[] infos = javax.swing.UIManager.getInstalledLookAndFeels();

        JMenuItem jRBMenuItem1 = new JMenuItem("Thémes");
        jMenueTheme.add(jRBMenuItem1);
        jRBMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/Menue/couleur-peinture-icone-9310-32.png")));
        jRBMenuItem1.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                nbtheme = ChoixThemes();
                try {

                    if (nbtheme == 0) {
                        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                            if ("Nimbus".equals(info.getName())) {
                                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                                break;
                            }

                        }

                    } else {
                        javax.swing.UIManager.setLookAndFeel(changeThemes(nbtheme));

                    }
                } catch (ClassNotFoundException ex) {
                    java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (InstantiationException ex) {
                    java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (IllegalAccessException ex) {
                    java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                } catch (UnsupportedLookAndFeelException ex) {
                    java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                }
                SwingUtilities.updateComponentTreeUI(JFPrincipale.this);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the System look and feel */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    //javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
                    break;
                }

            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPrincipale.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JFPrincipale().setVisible(true);

            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteAnimal;
    private javax.swing.JButton btnInsertAnimal;
    private javax.swing.JButton btnModifAnimal;
    private javax.swing.JButton btnQuiter;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbLocalisation;
    private javax.swing.JComboBox cbRace;
    private javax.swing.JComboBox cbSexeFiltre;
    private javax.swing.JComboBox cbTangeAge;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JMenuBar jMenuBar4;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuFichier;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JMenuItem jMenuItemAdopter;
    private javax.swing.JMenuItem jMenuItemQuitter;
    private javax.swing.JMenuItem jMenuItemaddAnimal;
    private javax.swing.JMenu jMenuOutile;
    private javax.swing.JMenu jMenuSecurite;
    private javax.swing.JMenu jMenueTheme;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableListAnimal;
    private javax.swing.JLabel labNBanimal;
    private javax.swing.JTextField tfIdPuce;
    // End of variables declaration//GEN-END:variables

    protected void refreshModel() {

        //myTableAnimal.setMyList(daoAnimal.selectAnimalPourModelAll());
        filtre();
        cbLocalisation.setSelectedIndex(1);
        // jTableListAnimal.setBackground(Color.getHSBColor(255, 204, 204));
        resizeColumnWidth();
    }

    private void resizeColumnWidth() {

        final TableColumnModel columnModel = jTableListAnimal.getColumnModel();
        for (int column = 0; column < jTableListAnimal.getColumnCount(); column++) {
            int width = 50; // Min width
            for (int row = 0; row < jTableListAnimal.getRowCount(); row++) {
                TableCellRenderer renderer = jTableListAnimal.getCellRenderer(row, column);
                Component comp = jTableListAnimal.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width, width);
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        CenterText();
    }

    private void CenterText() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTableListAnimal.setDefaultRenderer(String.class, centerRenderer);
    }

    protected Animal myAnimal;
    protected int PersId;
    private daoAnimal daoAnimal = Factory.getdaoAnimal();
    private TableModelAnimal myTableAnimal = new TableModelAnimal(daoAnimal.selectAnimalPourModelAll());
    private daoAdoption daoAdop = Factory.getdaoAdoption();
    private daoLieu daoLieu = Factory.getdaoLieu();
    private daoRace daoEspecesRace = Factory.getdaoRace();
    private daoType daoRaceType = Factory.getdaoType();
    private static int nbtheme = 11;
    private String dateDeb = null;
    private String datefin = null;
    private static Font subFont = new Font(Font.FontFamily.TIMES_ROMAN, 14,
            Font.BOLD);
    private String FILE = "C:/AnimalRefuge/createPDF/contrat.pdf";
    private String RapportFile="./src/report/";
    private boolean adoptionOK = false;

    private boolean AnimalDispoAdoption(Animal myAnimal) {
        boolean ok = true;
        if (myAnimal.getDispo() == 0) {
            JOptionPane.showMessageDialog(null, "Cette animal n'est pas dipoonible pour une adoption", "Avertissement", JOptionPane.WARNING_MESSAGE);
            ok = false;
        }
        return ok;
    }

    private boolean AnimalAuRefuge(Animal myAnimal) {
        boolean bol = false;
        if (myAnimal.getRaison_depart().compareTo("Au refuge") == 0) {
            bol = true;
        } else {
            bol = false;
            JOptionPane.showMessageDialog(null, "Cette animal n'est trouve pas dans refuge ", "Adoption impossible", JOptionPane.WARNING_MESSAGE);
        }
        return bol;
    }

    private boolean DisponiblePourAdoption(Animal myAnimal) {
        boolean bol = false;
        if (myAnimal.getDispo() == 1) {
            bol = true;
        } else {
            bol = false;
            JOptionPane.showMessageDialog(null, "Cette animal n'est pas disponible à l'adoption ", "Adoption impossible", JOptionPane.WARNING_MESSAGE);
        }
        return bol;
    }

    private boolean AjouterAdoption(Animal myAnimal) {
        boolean bol = true;
        myAnimal = myTableAnimal.getMyList(jTableListAnimal.getSelectedRow());
        myAnimal.setId_lieu(5);
        myAnimal.setRaison_depart("Adopter");
        myAnimal.setDispo(0);
        boolean ok = daoAnimal.updateAnimal(myAnimal);
        if (!ok) {
            JOptionPane.showMessageDialog(null, "Une erreur s'est produite lors de l'envoi de la commande mise à jour des données de l'animal échoué !", "Avertissement", JOptionPane.ERROR_MESSAGE);
            bol = false;
        }
        return bol;

    }

    private boolean UpdateAnimalVar(Animal myAnimal) {
        boolean bol = false;
        JDAffichePersonne jd = new JDAffichePersonne(this, true);
        JOptionPane.showMessageDialog(null, "Séléctionnez ou ajoutez un propriétaire", "Information", JOptionPane.INFORMATION_MESSAGE);
        jd.setVisible(true);
        Date dateCourant = new Date();
        Adoption myAdoption = new Adoption(WIDTH, null, WIDTH, WIDTH);
        try {
            myAdoption.setId_a(myAnimal.getId_a());

            myAdoption.setId_p(jd.myPersonne.getId_p());
            myAdoption.setDate_adoption(dateCourant);
            boolean ok = daoAdop.insertAdoption(myAdoption);
            if (ok) {
                bol = true;
                adoptionOK = AjouterAdoption(myAnimal);
            }
        } catch (NullPointerException e) {
        }

        return bol;
    }

    private void fillComponents() {
        cbLocalisation.addItem("<toutes>");
        ArrayList<Lieu> ListLieu = daoLieu.selectLieu();
        for (int i = 0; i < ListLieu.size(); i++) {
            cbLocalisation.addItem(((Lieu) ListLieu.get(i)).getNom_l());
        }
        cbRace.addItem("<tous>");
        ArrayList<objet.Type> TypeEsp = daoRaceType.selectTypes();
        for (int i = 0; i < TypeEsp.size(); i++) {
            cbRace.addItem(((objet.Type) TypeEsp.get(i)).getNom_t());
        }

    }

    private void filtre() {

        String localisation = (String) cbLocalisation.getSelectedItem();
        String AnimalRace = (String) cbRace.getSelectedItem();
        String Sexe = (String) cbSexeFiltre.getSelectedItem();
        String TrancheAge = (String) cbTangeAge.getSelectedItem();
        retournTrancheAge();
        if (localisation != null && AnimalRace != null && Sexe != null && TrancheAge != null) {
            if (localisation.equals("<toutes>")) {
                localisation = "%";
            }
            if (AnimalRace.equals("<tous>")) {
                AnimalRace = "%";
            }
            if (Sexe.equals("<tous>")) {
                Sexe = "%";
            }
            if (TrancheAge.equals("<tous>")) {
                dateDeb = laTrancheFin(100);
                datefin = laTrancheFin(0);
            }
          
            myTableAnimal.setMyList(daoAnimal.selectAnimalParLocalisationEtRace(localisation, AnimalRace, Sexe, dateDeb, datefin));
         
            labNBanimal.setText("("+jTableListAnimal.getRowCount()+")");
            
        }
    }

    private void refreshModelParIdPuce() {
        String idPuce = tfIdPuce.getText();
        idPuce = idPuce + "%";
        myTableAnimal.setMyList(daoAnimal.selectAnimalPourModelParPuce(idPuce));
    }

    private String changeThemes(int nb) {
        String look = "com.jtattoo.plaf.texture.TextureLookAndFeel";
        switch (nb) {
            case 1:
                look = "com.jtattoo.plaf.mcwin.McWinLookAndFeel";
                break;
            case 2:
                look = "com.jtattoo.plaf.smart.SmartLookAndFeel";
                break;
            case 3:
                look = "com.jtattoo.plaf.noire.NoireLookAndFeel";
                break;
            case 4:
                look = "com.jtattoo.plaf.acryl.AcrylLookAndFeel";
                break;
            case 5:
                look = "com.jtattoo.plaf.bernstein.BernsteinLookAndFeel";
                break;
            case 6:
                look = "com.jtattoo.plaf.aluminium.AluminiumLookAndFeel";
                break;
            case 7:
                look = "com.jtattoo.plaf.graphite.GraphiteLookAndFeel";
                break;
            case 8:
                look = "com.jtattoo.plaf.luna.LunaLookAndFeel";
                break;
            case 9:
                look = "com.jtattoo.plaf.texture.TextureLookAndFeel";
                break;
            case 10:
                look = "com.jtattoo.plaf.hifi.HiFiLookAndFeel";
                break;
        }
        return look;
    }

    private String getCurrentTimeStamp() {
        SimpleDateFormat sdfDate = new SimpleDateFormat("yyyy-MM-dd");//dd/MM/yyyy
        Date now = new Date();
        String strDate = sdfDate.format(now);
        return strDate;
    }

    private String laTrancheDeb(int debAns) {

        Calendar date = Calendar.getInstance();
        date.setTime(new Date());
        Format f = new SimpleDateFormat("yyyy-MM-dd");
        date.add(Calendar.YEAR, -debAns);
        return f.format(date.getTime());
    }

    private String laTrancheFin(int finAns) {
        Calendar date = Calendar.getInstance();
        date.setTime(new Date());
        Format f = new SimpleDateFormat("yyyy-MM-dd");
        date.add(Calendar.YEAR, -finAns);

        return f.format(date.getTime());
    }

    private void retournTrancheAge() {
        int tranche = cbTangeAge.getSelectedIndex();
        if (tranche != 0) {
            switch (tranche) {
                case 1:
                    dateDeb = laTrancheDeb(1);
                    datefin = laTrancheFin(0);
                    break;
                case 2:
                    dateDeb = laTrancheDeb(4);
                    datefin = laTrancheFin(2);
                    break;
                case 3:
                    dateDeb = laTrancheDeb(8);
                    datefin = laTrancheFin(4);
                    break;
                case 4:
                    dateDeb = laTrancheDeb(50);
                    datefin = laTrancheFin(8);
                    break;
            }
        }
    }

    private static void addContent(Document document, Animal myAnimal) throws DocumentException, IOException {

        Anchor anchor = new Anchor("Information", subFont);

        // Second parameter is the number of the chapter
        Chapter catPart = new Chapter(new Paragraph(anchor), 1);

        Paragraph subPara = new Paragraph("L'animal", subFont);
        Section subCatPart = catPart.addSection(subPara);
        subCatPart.add(new Paragraph("Nom : " + myAnimal.getNom()));
        subCatPart.add(new Paragraph("Date de naissance : " + myAnimal.getAgeSQL()));
        subCatPart.add(new Paragraph("Sexe : " + myAnimal.getSexe()));
        subCatPart.add(new Paragraph("Espéce : " + myAnimal.getRace()));
        subCatPart.add(new Paragraph("Race : " + myAnimal.getEspece()));
        subCatPart.add(new Paragraph("Identification : " + myAnimal.getIdent_puce()));
        String Castration;
        if (myAnimal.getSterile() == 0) {
            Castration = "/";
        } else {
            Castration = "le " + myAnimal.getDateSterileSQL();
        }
        subCatPart.add(new Paragraph("Castration / Stérilisation : " + Castration));
        String Vaccin;
        if (myAnimal.getVermifuge() == 0) {
            Vaccin = "/";
        } else {
            Vaccin = "le " + myAnimal.getDateVermifugeSQL();
        }
        subCatPart.add(new Paragraph("Vermifugation : " + Vaccin));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Je soussigné(e) : "));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Nom : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Prénom : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Adresse : ........................................................."));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Code Postal : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Ville : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Tel : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Email : ........................"));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("Déclare avoir pris connaissance de toutes "
                + "les conditions mentionnées ci-dessus et m’engage à les respecter pour le bien-être de l’animal. Sans cela, j’ai bien compris que celui-ci pouvait m’être reprit par l’association."));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph(" "));
        Date date = new Date();
        SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy");

        subCatPart.add(new Paragraph("Fait à : BRUXELLES                                                                                " + "Le : " + f.format(date)));
        subCatPart.add(new Paragraph(" "));

        subCatPart.add(new Paragraph(" "));
        subCatPart.add(new Paragraph("                                                                                                                 Signature de l'adoptant "));
        // now add all this to the document
        document.add(catPart);

    }

    private void concatePDf() throws IOException, DocumentException {
        Date date = new Date();
        SimpleDateFormat formater = null;
        formater = new SimpleDateFormat("yyyyMMddHHmmss");
        PdfReader reader1 = new PdfReader("C:/AnimalRefuge/createPDF/contrat_adoption.pdf");
        PdfReader reader2 = new PdfReader(FILE);
        String File2 = "C:/AnimalRefuge/createPDF/contrat_" + formater.format(date) + ".pdf";
        PdfCopyFields copy = new PdfCopyFields(new FileOutputStream(File2));
        copy.addDocument(reader1);
        copy.addDocument(reader2);

        copy.close();
        reader1.close();
        reader2.close();

        JOptionPane.showMessageDialog(null, "le document à été bien généré dans le dossie:" + File2);
    }
    private Connexion daocon = factory.Factory.getDAOConnexion();

    private int ChoixThemes() {
        int r = 0;
        String[] themes = {"McWin", "Smart", "Noire", "Acryl", "Bernstein", "Aluminium",
            "Graphite", "Luna", "Texture", "HiFi"};
        JOptionPane jop = new JOptionPane();
        String nom = (String) jop.showInputDialog(null, "Choisiez un théme ou appuiez sur annuler pour le théme par défaut", "Thémes", JOptionPane.QUESTION_MESSAGE, null, themes, themes[8]);
        if (nom != null) {
            for (int i = 0; i < themes.length; i++) {
                if (nom.compareTo(themes[i]) == 0) {
                    r = i + 1;
                }
            }
        }

        return r;
        /*Microchip

         Le numéro de microchip doit être un numéro ISO de 15 chiffres. Exemple 962052851260321
         Autres anciennes structures connues :
         9 chiffres + A
         exemple : 111235271A
         10 caractères quelconques
         exemples : 9514076F1C, 7F7ED014F0.
         Tatouage

         La marque d'un tatouage belge comporte 6 caractères dont le premier est un B.
         Autres anciennes structures connues :
         B + 3 chiffres + 2 lettres
         3 lettres + 3 chiffres
         VO + 4 chiffres
         couronne (à remplacer par la lettre W) + 6 caractères*/

    }

    private void generePdf() {
        FILE = "C:/AnimalRefuge/createPDF/contrat.pdf";
        try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(FILE));
            document.open();
            addContent(document, myAnimal);
            document.close();
            concatePDf();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

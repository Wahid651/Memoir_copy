/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *//*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *//*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 *//*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


package presentation;

import dao.daoPersonne;
import factory.Factory;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import objet.Personne;
import model.TableModelPersonne;
import static presentation.JDAffichePersonne.jTableListPersonne;

/**
 *
 * @author Super-Afg
 */
public class JDAffichePersonne extends javax.swing.JDialog {

    /**
     * Creates new form JDListPersonne
     */
    public JDAffichePersonne(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        refreshModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfPrenom = new javax.swing.JTextField();
        tfVille = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListPersonne = new javax.swing.JTable();
        btnquitter = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("La liste des personnes");

        jLabel1.setText("Nom :");

        tfNom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNomActionPerformed(evt);
            }
        });

        jLabel2.setText("Pr√©nom :");

        tfPrenom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfPrenomActionPerformed(evt);
            }
        });

        tfVille.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfVilleActionPerformed(evt);
            }
        });

        jLabel3.setText("Ville :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(tfVille, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(566, 566, 566))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfVille, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {tfNom, tfPrenom});

        jTableListPersonne.setAutoCreateRowSorter(true);
        jTableListPersonne.setModel(myTablePersonne
        );
        jTableListPersonne.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListPersonneMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListPersonne);

        btnquitter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/quitter.png"))); // NOI18N
        btnquitter.setText("Quitter");
        btnquitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnquitterActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/corbeille.png"))); // NOI18N
        btnDelete.setText("Supprimer");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/modifier-icone-5132-48.png"))); // NOI18N
        btnUpdate.setText("Modifier");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnInsert.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ajouter-vert-plus-icone-9105-48.png"))); // NOI18N
        btnInsert.setText("Ajouter");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnquitter)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnquitter)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnInsert)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableListPersonneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListPersonneMouseClicked
        if (jTableListPersonne.getSelectedRow() != -1) {
            if (evt.getClickCount() == 2) {
                myPersonne = myTablePersonne.getMyList(jTableListPersonne.getSelectedRow());
                PersonneViste(myPersonne);
                if (myPersonne == null || PersonneListRouge(myPersonne) == true) {
                } else {
                    int rep = JOptionPane.showConfirmDialog(null, "Vous avez selectionnez "
                            + myTablePersonne.getValueAt(jTableListPersonne.getSelectedRow(), 0) + " " + myTablePersonne.getValueAt(jTableListPersonne.getSelectedRow(), 1) + "Etes vous s√ªr de votre choix", "Confirmation", JOptionPane.YES_OPTION);
                    if (rep == JOptionPane.YES_OPTION) {
                        this.dispose();
                    }

                }
            }
        }
    }//GEN-LAST:event_jTableListPersonneMouseClicked

    private void btnquitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnquitterActionPerformed
       this.dispose();
    }//GEN-LAST:event_btnquitterActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        JDInsertPersonne jd = new JDInsertPersonne(null, rootPaneCheckingEnabled);
        jd.setVisible(true);
        refreshModel();
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        if (jTableListPersonne.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "S√©l√©ctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            myPersonne = myTablePersonne.getMyList(jTableListPersonne.getSelectedRow());
            JDUpdatePersonne jd = new JDUpdatePersonne(null, rootPaneCheckingEnabled, myPersonne);
            jd.setVisible(true);
            refreshModel();
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        if (jTableListPersonne.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "S√©l√©ctionnez d'abord une ligne svp !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            myPersonne = myTablePersonne.getMyList(jTableListPersonne.getSelectedRow());
            int rep = JOptionPane.showConfirmDialog(null, "Etes-vous s√ªr de vouloir supprimer l'√©l√©ment en cascade ?"
                    + myTablePersonne.getValueAt(jTableListPersonne.getSelectedRow(), 0) + " ?", "Confirmation", JOptionPane.YES_NO_OPTION);
            if (rep == JOptionPane.YES_OPTION) {
                daoPersonne.deletePersonne(myPersonne);
            }

            refreshModel();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tfNomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNomActionPerformed
        Filtre();
    }//GEN-LAST:event_tfNomActionPerformed

    private void tfPrenomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfPrenomActionPerformed
        Filtre();
    }//GEN-LAST:event_tfPrenomActionPerformed

    private void tfVilleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfVilleActionPerformed
      Filtre();
    }//GEN-LAST:event_tfVilleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {

            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {

                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDAffichePersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDAffichePersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDAffichePersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDAffichePersonne.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDAffichePersonne dialog = new JDAffichePersonne(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnquitter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private static javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable jTableListPersonne;
    private javax.swing.JTextField tfNom;
    private javax.swing.JTextField tfPrenom;
    private javax.swing.JTextField tfVille;
    // End of variables declaration//GEN-END:variables
  private void refreshModel() {
        myTablePersonne.setMyList(daoPersonne.selectPersonne());
        //OrganiseMaTable();
        resizeColumnWidth();
    }

    private void resizeColumnWidth() {
        final TableColumnModel columnModel = jTableListPersonne.getColumnModel();
        for (int column = 0; column < jTableListPersonne.getColumnCount(); column++) {
            int width = 50; // Min width
            for (int row = 0; row < jTableListPersonne.getRowCount(); row++) {
                TableCellRenderer renderer = jTableListPersonne.getCellRenderer(row, column);
                Component comp = jTableListPersonne.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width, width);
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
        CenterText();
    }

    private void CenterText() {
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);
        jTableListPersonne
                .setDefaultRenderer(String.class, centerRenderer);
    }

    private boolean PersonneListRouge(Personne myPersonne) {
        boolean ok = false;
        if (myPersonne.getEst_bannie() == 1) {
            JOptionPane.showMessageDialog(null, "Cette personne est plac√©e dans la list rouge ! ", "Avertissement", JOptionPane.WARNING_MESSAGE);
            ok = true;
        }
        return ok;
    }

    private boolean PersonneViste(Personne myPersonne) {
        boolean ok = true;
        if (myPersonne.getCkh_home() == 0) {
            JOptionPane.showMessageDialog(null, "Cette personne est n'a pas re√ßu de visite! ", "Avertissement", JOptionPane.WARNING_MESSAGE);
            ok = false;
        }
        return ok;
    }
    protected Personne myPersonne;
    private daoPersonne daoPersonne = Factory.getdaoPersonne();
    private TableModelPersonne myTablePersonne = new TableModelPersonne(daoPersonne.selectPersonne());

    private void Filtre() {
        String nom = tfNom.getText();
        String prenom = tfPrenom.getText();
        String ville = tfVille.getText();
        nom = nom + "%";
        prenom = prenom + "%";
        ville =ville + "%";
        myTablePersonne.setMyList(daoPersonne.selectPersonneParNomEtPrenom(nom, prenom, ville));
    }

}

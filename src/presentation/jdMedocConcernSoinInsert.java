/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package presentation;

import dao.daoMedicament;
import dao.daoSoinConcernMedoc;
import daoMySQL.AnimalSoinMySQL;
import static java.awt.image.ImageObserver.WIDTH;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import objet.Medicament;
import objet.SoinConcernMedoc;

/**
 *
 * @author Super-Afg
 */
public class jdMedocConcernSoinInsert extends javax.swing.JDialog {

    /**
     * Creates new form jdMedocConcernSoinInsert
     */
    public jdMedocConcernSoinInsert(java.awt.Frame parent, boolean modal, int idSoin) {
        super(parent, modal);
        initComponents();
        fillComponents();
        lastIdSoin = idSoin;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbMedoc = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        tfDosage = new javax.swing.JTextField();
        btnFermer = new javax.swing.JButton();
        btnAjouter = new javax.swing.JButton();
        brnAjMedoc = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Traitement");

        jLabel1.setText("Traitement");

        cbMedoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMedocActionPerformed(evt);
            }
        });

        jLabel2.setText("Dosage");

        btnFermer.setText("Fermer");
        btnFermer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFermerActionPerformed(evt);
            }
        });

        btnAjouter.setText("Ajouter");
        btnAjouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterActionPerformed(evt);
            }
        });

        brnAjMedoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resource/ajouter-en-plus-icone-9315-16.png"))); // NOI18N
        brnAjMedoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnAjMedocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnAjouter)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFermer))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(tfDosage, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbMedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(brnAjMedoc)
                        .addGap(0, 34, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbMedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(brnAjMedoc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfDosage, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFermer)
                    .addComponent(btnAjouter))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbMedocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMedocActionPerformed
        if (cbMedoc.getSelectedIndex() != -1) {
            String selection = cbMedoc.getSelectedItem().toString();
            idMedoc = getidMed(selection);

        }

    }//GEN-LAST:event_cbMedocActionPerformed

    private void btnAjouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterActionPerformed
        SoinConcernMedoc scm = new SoinConcernMedoc(lastIdSoin, idMedoc, null);
        scm.setId_soin(lastIdSoin);
        scm.setId_m(idMedoc);
        scm.setDosage(tfDosage.getText());
        boolean ok = daoScm.insertSoinConcernMedoc(scm);
        if (!ok) {
            JOptionPane.showMessageDialog(null, "Insertion impossible !", "Avertissement", JOptionPane.ERROR_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Insertion éffectuée !", null, WIDTH);
        }


    }//GEN-LAST:event_btnAjouterActionPerformed

    private void brnAjMedocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnAjMedocActionPerformed
     JDListMedicament jd= new JDListMedicament(null, rootPaneCheckingEnabled);
     jd.setVisible(true);
     fillComponents();
    }//GEN-LAST:event_brnAjMedocActionPerformed

    private void btnFermerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFermerActionPerformed
  this.dispose();
    }//GEN-LAST:event_btnFermerActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnAjMedoc;
    private javax.swing.JButton btnAjouter;
    private javax.swing.JButton btnFermer;
    private javax.swing.JComboBox cbMedoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tfDosage;
    // End of variables declaration//GEN-END:variables
private daoMedicament daoMed = factory.Factory.getdaoMedicament();
private daoSoinConcernMedoc daoScm = factory.Factory.getdaoConcernMedoc();
    private int idMedoc;
    private int lastIdSoin;

    private void fillComponents() {
        cbMedoc.removeAllItems();

        ArrayList<Medicament> vet = daoMed.selectMedicament();
        for (int i = 0; i < vet.size(); i++) {
            cbMedoc.addItem(((Medicament) vet.get(i)).getNom_m());
        }

    }

    private int getidMed(String var) {
        int retour = 0;
        ArrayList<Medicament> medoc = daoMed.selectMedicament();
        if (retour == 0) {
            for (int i = 0; i < medoc.size(); i++) {
                if (medoc.get(i).getNom_m().compareToIgnoreCase(var) == 0) {
                    retour = medoc.get(i).getId_m();
                }
            }
        }
        return retour;
    }
}
